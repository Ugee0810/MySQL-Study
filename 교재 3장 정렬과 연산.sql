#날짜 : 2022/06/16
#이름 : 송환욱
#내용 : 교재 3장 정렬과 연산

#테이블 생성/데이터 저장
CREATE TABLE `sample31` (
	`NAME`	 VARCHAR(10),
	`AGE`		 INT,
	`ADDRESS` VARCHAR(100)
);
INSERT INTO SAMPLE31 (`NAME`, `AGE`, `ADDRESS`) VALUES ('A씨', 36, '대구광역시 중구');
INSERT INTO SAMPLE31 (`NAME`, `AGE`, `ADDRESS`) VALUES ('B씨', 18, '부산광역시 연제구');
INSERT INTO SAMPLE31 (`NAME`, `AGE`, `ADDRESS`) VALUES ('C씨', 25, '서울특별시 중구');
	
#p95 : AGE 열로 정렬하기
SELECT *
FROM SAMPLE31
ORDER BY AGE;

#p96 : ADDRESS 열로 정렬하기
SELECT *
FROM SAMPLE31
ORDER BY ADDRESS;

#p98 : DESC와 ASC
#DESC
SELECT *
FROM SAMPLE31
ORDER BY AGE DESC;
#ASC
SELECT *
FROM SAMPLE31
ORDER BY AGE ASC;

#테이블 생성/데이터 저장
CREATE TABLE `sample311` (
	`A` INT,
	`B` INT
);
INSERT INTO SAMPLE311 (`A`, `B`) VALUES (1, 1);
INSERT INTO SAMPLE311 (`A`, `B`) VALUES (2, 2);
INSERT INTO SAMPLE311 (`A`, `B`) VALUES (10, 10);
INSERT INTO SAMPLE311 (`A`, `B`) VALUES (11, 11);

#p100 : SAMPLE311 을 A로 정렬하기
SELECT *
FROM SAMPLE311
ORDER BY A;

#테이블 생성/데이터 저장
CREATE TABLE `sample32` (
	`A` INT,
	`B` INT
);
INSERT INTO SAMPLE32 (`A`, `B`) VALUES (1, 1);
INSERT INTO SAMPLE32 (`A`, `B`) VALUES (2, 1);
INSERT INTO SAMPLE32 (`A`, `B`) VALUES (2, 2);
INSERT INTO SAMPLE32 (`A`, `B`) VALUES (1, 3);
INSERT INTO SAMPLE32 (`A`, `B`) VALUES (1, 2);

#p104 : A 열로 정렬하기
SELECT *
FROM SAMPLE32
ORDER BY A;

#p105 : 1. SAMPLE32를 A 열과 B 열로 정렬하기
#		  2. SAMPLE32를 B 열과 A 열로 정렬하기
SELECT *
FROM SAMPLE32
ORDER BY A, B;

SELECT *
FROM SAMPLE32
ORDER BY B, A;

#p106 : A 열을 ASC로 B 열을 DESC로 정렬하기
SELECT *
FROM SAMPLE32
ORDER BY A ASC, B DESC;

#테이블 생성/데이터 저장
CREATE TABLE `sample33` (
	`NO` INT
);
INSERT INTO `SAMPLE33` (`NO`) VALUES (1);
INSERT INTO `SAMPLE33` (`NO`) VALUES (2);
INSERT INTO `SAMPLE33` (`NO`) VALUES (3);
INSERT INTO `SAMPLE33` (`NO`) VALUES (4);
INSERT INTO `SAMPLE33` (`NO`) VALUES (5);
INSERT INTO `SAMPLE33` (`NO`) VALUES (6);
INSERT INTO `SAMPLE33` (`NO`) VALUES (7);

#p110 : LIMIT로 행수 제한하기
SELECT *
FROM SAMPLE33
LIMIT 3;

#p111 : 정렬 후 LIMIT 3으로 상위 3건만 취득하기
SELECT *
FROM SAMPLE33
ORDER BY `NO` DESC
LIMIT 3;

#p113 : 1. LIMIT로 첫 번째 페이지에 표시할 데이터 취득하기
#		  2. LIMIT로 두 번째 페이지에 표시할 데이터 취득하기
SELECT *
FROM SAMPLE33
LIMIT 3
OFFSET 0;

SELECT *
FROM SAMPLE33
LIMIT 3
OFFSET 3;

#테이블 생성/데이터 저장
CREATE TABLE `sample34` (
	`NO`		  INT,
	`PRICE`	  INT,
	`QUANTITY` INT
);
INSERT INTO  `SAMPLE34` (`NO`, `PRICE`, `QUANTITY`) VALUES (1, 100, 10);
INSERT INTO  `SAMPLE34` (`NO`, `PRICE`, `QUANTITY`) VALUES (2, 230, 24);
INSERT INTO  `SAMPLE34` (`NO`, `PRICE`, `QUANTITY`) VALUES (3, 1980, 1);

#p118 : SELECT 구로 금액 계산하기
SELECT
		*,
		PRICE * QUANTITY
FROM `SAMPLE34`;

#p121 : WHERE 구에서 계산, 검색하기
SELECT
		*,
		PRICE * QUANTITY AS `AMOUNT`
FROM `SAMPLE34`
WHERE PRICE * QUANTITY > 500;

#p124 : 금액을 내림차순으로 정렬하기
SELECT
	*,
	PRICE * QUANTITY AS AMOUNT
FROM `sample34`
ORDER BY PRICE * QUANTITY DESC;

#p125 : 금액의 별명을 사용해 내림차순으로 정렬하기
SELECT
	*,
	PRICE * QUANTITY AS AMOUNT
FROM `sample34`
ORDER BY AMOUNT DESC;

#테이블 생성/데이터 저장
CREATE TABLE `sample341` (
	`AMOUNT` DECIMAL(10,2)
);
INSERT INTO `SAMPLE341` (`AMOUNT`) VALUES (5961.60);
INSERT INTO `SAMPLE341` (`AMOUNT`) VALUES (2138.40);
INSERT INTO `SAMPLE341` (`AMOUNT`) VALUES (1080.00);

#p127 : ROUND로 반올림하기
SELECT
	AMOUNT,
	ROUND(AMOUNT)
FROM `SAMPLE341`;

#p128 : 소수점 둘째 자리에서 반올림하기
SELECT
	AMOUNT,
	ROUND(AMOUNT, 1)
FROM `SAMPLE341`;

#p129 : 10 단위를 반올림하기
SELECT
	AMOUNT,
	ROUND(AMOUNT, -2)
FROM `SAMPLE341`;

#테이블 생성/데이터 저장
CREATE TABLE `sample35` (
	`NO`		  INT,
	`PRICE`	  INT,
	`QUANTITY` INT,
	`UNIT`     VARCHAR(10)
);
INSERT INTO `SAMPLE35` (`NO`, `PRICE`, `QUANTITY`, `UNIT`) VALUES (1, 100, 10, '개');
INSERT INTO `SAMPLE35` (`NO`, `PRICE`, `QUANTITY`, `UNIT`) VALUES (2, 230, 24, '캔');
INSERT INTO `SAMPLE35` (`NO`, `PRICE`, `QUANTITY`, `UNIT`) VALUES (3, 1980, 1, '장');

#p132 : 문자열 결합
SELECT
	CONCAT(QUANTITY, UNIT)
FROM `SAMPLE35`;

#p137 : 시스템 날짜 확인하기
SELECT
	CURRENT_TIMESTAMP;
	
#p139 : 시스템 날짜의 1일 후를 계산하기
SELECT
	CURRENT_DATE + INTERVAL 1 DAY;

#테이블 생성/데이터 저장
CREATE TABLE `sample37` (
	`A` INT NULL
);
INSERT INTO `SAMPLE37` (`A`) VALUES (1);
INSERT INTO `SAMPLE37` (`A`) VALUES (2);
INSERT INTO `SAMPLE37` (`A`) VALUES (NULL);

#p142 : NULL 값을 0으로 변환하기
SELECT
	`A`,
	CASE WHEN `A` IS NULL
	THEN 0 ELSE `A` END "A(NULL = 0)"
FROM `SAMPLE37`;

#p144 : 성별 코드 변환하기(검색CASE)


#p145 : 성별 코드 변환하기(단순CASE)
#p147 : 검색 CASE 문으로 NULL 판정하기